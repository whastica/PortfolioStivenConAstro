--- 
import '@fontsource-variable/onest';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="min-h-screen flex flex-col">
		<Header />
		<main class="relative z-10 flex-grow">
			<slot />
		</main>
		<Footer class="relative z-10 bg-transparent" />
	</body>
</html>

<style is:global>
    :root {
        color-scheme: light dark;
    }
    html {
        font-family: 'Onest', system-ui, sans-serif;
    }

    body {
        background: #1a1a1a; /* Fondo oscuro */
        display: flex;
        flex-direction: column;
        height: 100vh;
        transition: background 0.3s ease; /* Para una transici√≥n suave */
    }

    body.light {
        background: #e0e0e0; /* Fondo claro */
        color: #000; /* Texto oscuro */
    }

    /* Estilos adicionales para el modo claro */
    body.light a {
        color: #1a1a1a; /* Color de los enlaces en modo claro */
    }
</style>

<script>
	const themeToggleButton = document.getElementById('theme-toggle');
	const currentTheme = localStorage.getItem('theme');
  
	// Aplicar el tema guardado en localStorage
	if (currentTheme) {
	  document.body.classList.toggle('light', currentTheme === 'light');
	}
  
	themeToggleButton.addEventListener('click', () => {
	  const isLightTheme = document.body.classList.toggle('light');
	  const newTheme = isLightTheme ? 'light' : 'dark';
	  
	  // Guardar el tema en localStorage
	  localStorage.setItem('theme', newTheme);
	});
  </script>